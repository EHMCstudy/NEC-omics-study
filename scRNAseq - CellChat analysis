# This section of the code analyzes cell-cell communication networks using the `CellChat` package.
# The aim is to infer the signaling pathways and interactions between cell types from different conditions such as "Control_P8", "NEC_P8", "ABT_NEC_P8", "NEC_Indoles", and "NEC_Kyn".
# The analysis includes subset creation, identification of over-expressed genes and interactions, computation of communication probabilities, and generation of heatmap visualizations.

# Load necessary libraries
library(Seurat)
library(dplyr)
library(CellChat)
library(ggplot2)

# Set the default assay for merged Seurat object
DefaultAssay(merged_NEC_AhR) <- "SCT"

# Analyze Control_P8 group
cellchat_merged_NEC_AhR_sub_Control_P8 <- createCellChat(object = merged_NEC_AhR %>% subset(Group == "Control_P8"), 
                                                         datatype = "RNA", group.by = "Type_wide")

# Use the default mouse CellChat database
CellChatDB <- CellChatDB.mouse 
CellChatDB.use <- subsetDB(CellChatDB, search = c("Secreted Signaling", "Cell-Cell Contact", "ECM-Receptor")) # Filtering for specific pathways
cellchat_merged_NEC_AhR_sub_Control_P8@DB <- CellChatDB.use

# Subset expression data of signaling genes to save computational resources
cellchat_merged_NEC_AhR_sub_Control_P8 <- subsetData(cellchat_merged_NEC_AhR_sub_Control_P8)
cellchat_merged_NEC_AhR_sub_Control_P8 <- identifyOverExpressedGenes(cellchat_merged_NEC_AhR_sub_Control_P8)
cellchat_merged_NEC_AhR_sub_Control_P8 <- identifyOverExpressedInteractions(cellchat_merged_NEC_AhR_sub_Control_P8)

# Part II: Inference of cell-cell communication network for Control_P8
cellchat_merged_NEC_AhR_sub_Control_P8 <- computeCommunProb(cellchat_merged_NEC_AhR_sub_Control_P8)
cellchat_merged_NEC_AhR_sub_Control_P8 <- filterCommunication(cellchat_merged_NEC_AhR_sub_Control_P8, min.cells = 10)
cellchat_merged_NEC_AhR_sub_Control_P8 <- computeCommunProbPathway(cellchat_merged_NEC_AhR_sub_Control_P8)
cellchat_merged_NEC_AhR_sub_Control_P8 <- aggregateNet(cellchat_merged_NEC_AhR_sub_Control_P8)

# Similar steps for other groups (NEC_P8, ABT_NEC_P8, NEC_Indoles, NEC_Kyn)
# Create, process, and integrate the networks for each group

# NEC_P8 group
cellchat_merged_NEC_AhR_sub_NEC_P8 <- createCellChat(object = merged_NEC_AhR %>% subset(Group == "NEC_P8"), 
                                                     datatype = "RNA", group.by = "Type_wide")
cellchat_merged_NEC_AhR_sub_NEC_P8@DB <- CellChatDB.use
cellchat_merged_NEC_AhR_sub_NEC_P8 <- subsetData(cellchat_merged_NEC_AhR_sub_NEC_P8)
cellchat_merged_NEC_AhR_sub_NEC_P8 <- identifyOverExpressedGenes(cellchat_merged_NEC_AhR_sub_NEC_P8)
cellchat_merged_NEC_AhR_sub_NEC_P8 <- identifyOverExpressedInteractions(cellchat_merged_NEC_AhR_sub_NEC_P8)
cellchat_merged_NEC_AhR_sub_NEC_P8 <- computeCommunProb(cellchat_merged_NEC_AhR_sub_NEC_P8)
cellchat_merged_NEC_AhR_sub_NEC_P8 <- filterCommunication(cellchat_merged_NEC_AhR_sub_NEC_P8, min.cells = 10)
cellchat_merged_NEC_AhR_sub_NEC_P8 <- computeCommunProbPathway(cellchat_merged_NEC_AhR_sub_NEC_P8)
cellchat_merged_NEC_AhR_sub_NEC_P8 <- aggregateNet(cellchat_merged_NEC_AhR_sub_NEC_P8)

# ABT_NEC_P8 group
cellchat_merged_NEC_AhR_sub_ABT_NEC_P8 <- createCellChat(object = merged_NEC_AhR %>% subset(Group == "ABT_NEC_P8"), 
                                                          datatype = "RNA", group.by = "Type_wide")
cellchat_merged_NEC_AhR_sub_ABT_NEC_P8@DB <- CellChatDB.use
cellchat_merged_NEC_AhR_sub_ABT_NEC_P8 <- subsetData(cellchat_merged_NEC_AhR_sub_ABT_NEC_P8)
cellchat_merged_NEC_AhR_sub_ABT_NEC_P8 <- identifyOverExpressedGenes(cellchat_merged_NEC_AhR_sub_ABT_NEC_P8)
cellchat_merged_NEC_AhR_sub_ABT_NEC_P8 <- identifyOverExpressedInteractions(cellchat_merged_NEC_AhR_sub_ABT_NEC_P8)
cellchat_merged_NEC_AhR_sub_ABT_NEC_P8 <- computeCommunProb(cellchat_merged_NEC_AhR_sub_ABT_NEC_P8)
cellchat_merged_NEC_AhR_sub_ABT_NEC_P8 <- filterCommunication(cellchat_merged_NEC_AhR_sub_ABT_NEC_P8, min.cells = 10)
cellchat_merged_NEC_AhR_sub_ABT_NEC_P8 <- computeCommunProbPathway(cellchat_merged_NEC_AhR_sub_ABT_NEC_P8)
cellchat_merged_NEC_AhR_sub_ABT_NEC_P8 <- aggregateNet(cellchat_merged_NEC_AhR_sub_ABT_NEC_P8)

# NEC_Indoles group
cellchat_merged_NEC_AhR_sub_NEC_Indoles <- createCellChat(object = merged_NEC_AhR %>% subset(Group == "NEC_Indoles"), 
                                                              datatype = "RNA", group.by = "Type_wide")
cellchat_merged_NEC_AhR_sub_NEC_Indoles@DB <- CellChatDB.use
cellchat_merged_NEC_AhR_sub_NEC_Indoles <- subsetData(cellchat_merged_NEC_AhR_sub_NEC_Indoles)
cellchat_merged_NEC_AhR_sub_NEC_Indoles <- identifyOverExpressedGenes(cellchat_merged_NEC_AhR_sub_NEC_Indoles)
cellchat_merged_NEC_AhR_sub_NEC_Indoles <- identifyOverExpressedInteractions(cellchat_merged_NEC_AhR_sub_NEC_Indoles)
cellchat_merged_NEC_AhR_sub_NEC_Indoles <- computeCommunProb(cellchat_merged_NEC_AhR_sub_NEC_Indoles)
cellchat_merged_NEC_AhR_sub_NEC_Indoles <- filterCommunication(cellchat_merged_NEC_AhR_sub_NEC_Indoles, min.cells = 10)
cellchat_merged_NEC_AhR_sub_NEC_Indoles <- computeCommunProbPathway(cellchat_merged_NEC_AhR_sub_NEC_Indoles)
cellchat_merged_NEC_AhR_sub_NEC_Indoles <- aggregateNet(cellchat_merged_NEC_AhR_sub_NEC_Indoles)

# NEC_Kyn group
cellchat_merged_NEC_AhR_sub_NEC_Kyn <- createCellChat(object = merged_NEC_AhR %>% subset(Group == "NEC_Kyn"), 
                                                          datatype = "RNA", group.by = "Type_wide")
cellchat_merged_NEC_AhR_sub_NEC_Kyn@DB <- CellChatDB.use
cellchat_merged_NEC_AhR_sub_NEC_Kyn <- subsetData(cellchat_merged_NEC_AhR_sub_NEC_Kyn)
cellchat_merged_NEC_AhR_sub_NEC_Kyn <- identifyOverExpressedGenes(cellchat_merged_NEC_AhR_sub_NEC_Kyn)
cellchat_merged_NEC_AhR_sub_NEC_Kyn <- identifyOverExpressedInteractions(cellchat_merged_NEC_AhR_sub_NEC_Kyn)
cellchat_merged_NEC_AhR_sub_NEC_Kyn <- computeCommunProb(cellchat_merged_NEC_AhR_sub_NEC_Kyn)
cellchat_merged_NEC_AhR_sub_NEC_Kyn <- filterCommunication(cellchat_merged_NEC_AhR_sub_NEC_Kyn, min.cells = 10)
cellchat_merged_NEC_AhR_sub_NEC_Kyn <- computeCommunProbPathway(cellchat_merged_NEC_AhR_sub_NEC_Kyn)
cellchat_merged_NEC_AhR_sub_NEC_Kyn <- aggregateNet(cellchat_merged_NEC_AhR_sub_NEC_Kyn)

# Merge all CellChat results into one list
CellChat_Immune_list_NEC_Indoles_All <- list(Control = cellchat_merged_NEC_AhR_sub_Control_P8,
                                              NEC = cellchat_merged_NEC_AhR_sub_NEC_P8,
                                              NEC_Indoles = cellchat_merged_NEC_AhR_sub_NEC_Indoles,
                                              NEC_Kyn = cellchat_merged_NEC_AhR_sub_NEC_Kyn)

# Merge data into one CellChat object
CellChat_Immune_NEC_Indoles_All <- mergeCellChat(CellChat_Immune_list_NEC_Indoles_All, 
                                                 add.names = names(CellChat_Immune_list_NEC_Indoles_All), 
                                                 cell.prefix = TRUE)

# Visualize the heatmap for differential cell-cell communication
pdf("CellChat_heatmap_NEC_P8_vs_Control_P8.pdf", width = 5, height = 3)
gg1 <- netVisual_heatmap(CellChat_Immune_NEC_Indoles_All, comparison = c(1, 2))
gg2 <- netVisual_heatmap(CellChat_Immune_NEC_Indoles_All, measure = "weight", comparison = c(1, 2)) 
gg1 + gg2
dev.off()

# Visualize the heatmap for NEC_Indoles vs NEC comparison
pdf("CellChat_heatmap_NEC_Indoles_vs_NEC.pdf", width = 5, height = 3)
gg1 <- netVisual_heatmap(CellChat_Immune_NEC_Indoles_All, comparison = c(2, 3))
gg2 <- netVisual_heatmap(CellChat_Immune_NEC_Indoles_All, measure = "weight", comparison = c(2, 3)) 
gg1 + gg2
dev.off()
