# This section performs pseudotime analysis using Monocle3 for stromal cells from the mouse scRNA-seq dataset.
# The goal is to identify how gene expression changes along the pseudotime axis and to visualize this in heatmaps and plots.

# Load necessary libraries
library(Seurat)
library(dplyr)
library(Monocle3)
library(ggplot2)
library(tidyr)
library(RColorBrewer)

# Normalize and find variable features for the stromal cells
merged_NEC_AhR_Stromal <- NormalizeData(merged_NEC_AhR_Stromal)
merged_NEC_AhR_Stromal <- FindVariableFeatures(merged_NEC_AhR_Stromal)

# Export Seurat object to Monocle3 format
merged_NEC_AhR_Stromal.cds <- as.cell_data_set(merged_NEC_AhR_Stromal)

# Cluster cells and learn graph of trajectories
merged_NEC_AhR_Stromal.cds <- cluster_cells(cds = merged_NEC_AhR_Stromal.cds, reduction_method = "UMAP")
merged_NEC_AhR_Stromal.cds <- learn_graph(merged_NEC_AhR_Stromal.cds, use_partition = TRUE)

# Function to get the earliest principal node based on a specific time point
get_earliest_principal_node <- function(merged_NEC_AhR_Stromal.cds, time_bin="crypt_bottom") {
  cell_ids <- which(colData(merged_NEC_AhR_Stromal.cds)[, "Type_Stromal"] == time_bin)
  
  closest_vertex <- merged_NEC_AhR_Stromal.cds@principal_graph_aux[["UMAP"]]$pr_graph_cell_proj_closest_vertex
  closest_vertex <- as.matrix(closest_vertex[colnames(merged_NEC_AhR_Stromal.cds), ])
  root_pr_nodes <- igraph::V(principal_graph(merged_NEC_AhR_Stromal.cds)[["UMAP"]])$name[as.numeric(names(which.max(table(closest_vertex[cell_ids,]))))]
  
  return(root_pr_nodes)
}

# Order cells based on pseudotime
merged_NEC_AhR_Stromal.cds <- order_cells(merged_NEC_AhR_Stromal.cds)

# Plot pseudotime for stromal cells
pseudotime_NEC_AhR_Stromal <- plot_cells(merged_NEC_AhR_Stromal.cds,
                                          color_cells_by = "pseudotime", 
                                          alpha = 1,
                                          trajectory_graph_segment_size = 0.3,
                                          label_cell_groups = FALSE,
                                          label_leaves = FALSE, 
                                          label_groups_by_cluster = FALSE, 
                                          label_roots = FALSE,
                                          label_branch_points = FALSE)
ggsave("pseudotime_NEC_AhR_Stromal.pdf", pseudotime_NEC_AhR_Stromal, width = 3.2, height = 2.5)

# Generate a graph of gene expression changes along pseudotime
pt <- pseudotime(merged_NEC_AhR_Stromal.cds)
merged_NEC_AhR_Stromal@meta.data$pseudotime <- pt

# Scale data for pseudotime analysis
merged_NEC_AhR_Stromal@meta.data$Type <- Idents(merged_NEC_AhR_Stromal)
merged_NEC_AhR_Stromal <- ScaleData(merged_NEC_AhR_Stromal)

# Select genes for pseudotime plotting
data.use <- data.frame(FetchData(merged_NEC_AhR_Stromal, 
                                 vars = c("pseudotime", "Type", 
                                          "CytoTRACE2_Score", "Cd34", "Pdgfra", "Hgf",
                                          "Col1a1", "Col1a2", "Col4a5", "Col4a6", "Ecm1", 
                                          "Postn", "Mmp10", "Adamdec1", "Adamts3", 
                                          "Cxcl14", "Pdpn",
                                          "Nrg1", "Bmp2", "Bmp5")))

# Filter and organize the data for visualization
data.use_filter <- data.frame(FetchData(merged_NEC_AhR_Stromal, 
                                         vars = c("pseudotime", "Type", 
                                                  "CytoTRACE2_Score", "Cd34", "Bmp2", # "Bmp5", 
                                                  "Adamdec1", "Cxcl14", 
                                                  "Tgfb1", "Ereg"))) 

data.use_filter$Cell <- rownames(data.use_filter)
data.usemod <- data.use_filter %>% gather(key="genes", value="value", -pseudotime, -Type, -Cell) %>% 
  mutate(Group = case_when(
    genes %in% c("CytoTRACE2_Score", "Cd34") ~ "Stemness",
    genes %in% c("Adamdec1", "Tgfb1", "Cxcl14") ~ "Activation",
    genes %in% c("Ereg", "Bmp2", "Pdgfra") ~ "Signaling",
    TRUE ~ "others"
  )) %>%
  mutate(Group = factor(Group, levels = c("Stemness", "Activation", "Signaling")))

# Function to create color scale for different groups
makeColors <- function() {
  maxColors <- 8
  usedColors <- c()
  possibleColors <- colorRampPalette(brewer.pal(9, "Paired"))(maxColors)

  function(values) {
    newKeys <- setdiff(values, names(usedColors))
    newColors <- possibleColors[1:length(newKeys)]
    usedColors.new <- c(usedColors, newColors)
    names(usedColors.new) <- c(names(usedColors), newKeys)
    usedColors <<- usedColors.new

    possibleColors <<- possibleColors[length(newKeys)+1:maxColors]
    usedColors
  }
}

# Plot gene expression changes along pseudotime
p1 <- data.usemod %>% 
  ggplot(aes(pseudotime, value, color = genes)) +
  geom_smooth(span = 0.75, linewidth = 0.5, method = "loess") +
  scale_color_manual(values = makeColors(data.usemod$genes)) + 
  theme_bw() +
  facet_wrap(~Group, ncol = 1, scales = "free_y") +
  xlab("Pseudotime") + ylab("Expression") +
  theme(panel.border = element_blank(), 
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.line = element_line(colour = "black"))
ggsave("pseudotime_NEC_AhR_Stromal_key_gene.pdf", p1, width = 3.5, height = 2.7)

# Dimensional plot for key genes
dittoDimPlot(merged_NEC_AhR_Stromal, "CytoTRACE2_Score") | 
  dittoDimPlot(merged_NEC_AhR_Stromal, "Cd34") |
  dittoDimPlot(merged_NEC_AhR_Stromal, "Ereg") /
  (dittoDimPlot(merged_NEC_AhR_Stromal, "Adamdec1") | 
   dittoDimPlot(merged_NEC_AhR_Stromal, "Cxcl14") | 
   dittoDimPlot(merged_NEC_AhR_Stromal, "Tgfb1")) /
  (dittoDimPlot(merged_NEC_AhR_Stromal, "Bmp2") | 
   dittoDimPlot(merged_NEC_AhR_Stromal, "Bmp4") | 
   dittoDimPlot(merged_NEC_AhR_Stromal, "Bmp5"))
ggsave("DimPlot_NEC_AhR_Stromal_key_gene.pdf", width = 9, height = 7)
