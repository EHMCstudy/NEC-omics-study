
## # Scripts below show the PSM matching of samples analyzed for calprotectin level between controls and confirmed NEC. This method is also applied to samples from microbiome and metabolomics analyses, as well as samples between controls and stage Ib NEC.

# Environment preparation: Install and load required packages

# Install packages (uncomment the lines below if not installed yet)
# install.packages(c("dplyr", "MatchIt", "tableone", "knitr", "writexl"))

# Load required libraries
library(dplyr)        # Data manipulation
library(MatchIt)      # Matching method for PSM
library(tableone)     # CreateTableOne function for descriptive statistics
library(knitr)        # For nice printing of tables
library(writexl)      # For writing data to Excel files

# Preprocess the data - set time point names
FB_NEC_Sample.unmatch_Calprotectin_all <- FB_NEC_final %>%
  filter(!is.na(Calprotectin)) %>% 
  filter(Group.NEC.ID != "Stage Ib NEC" & !grepl("Stage Ib NEC", TP_NEC, fixed = TRUE)) %>%
  mutate(
    TP_Calprotectin.match = case_when(
      DOL <= 3 ~ "T.meconium",
      TP_NEC == "NEC" ~ "T.NEC",
      TP_NEC == "NEC.pre2" ~ "T.pre2",
      TP_NEC == "NEC.pre" ~ "T.pre",
      TP_NEC == "NEC.post2" ~ "T.post2",
      TP_NEC == "NEC.post" ~ "T.post",
      TRUE ~ as.character(TP_NEC)
    )
  )

levels.TP <- c("T.meconium", "T.pre2", "T.pre", "T.NEC", "T.post", "T.post2")

# Initialize list for storing matched data
List_FB_NEC_match_Calprotectin_TP <- list()

# Matching for "T.meconium" group
FB_NEC_Sample.unmatch_Calprotectin <- FB_NEC_Sample.unmatch_Calprotectin_all %>%
  filter(DOL <= 3 | Group.NEC.ID == "Controls")

# Perform optimal matching
data_match.optimal <- matchit(
  Group.NEC.ID ~ DOL + GA + BW + Gender + DeliveryMode + Apgar5 + Breastmilk_days + Ab_prenatal + Ab_days + Probiotics_days,
  data = FB_NEC_Sample.unmatch_Calprotectin, 
  method = "optimal", 
  ratio = 2
)

# Extract matched data
df.match.ID.NEC <- match.data(data_match.optimal) %>%
  distinct(ID.seq) %>%
  select(ID.seq) %>%
  mutate(Group_NEC_match_Calprotectin = Group.NEC.ID)

FB_NEC_match_Calprotectin_raw_TP <- FB_NEC_Sample.unmatch_Calprotectin %>%
  filter(ID.seq %in% df.match.ID.NEC$ID.seq) %>%
  mutate(Group_NEC_match_Calprotectin = Group.NEC.ID)

# Process the matching matrix for group assignment
match.matrix_NEC <- data_match.optimal$match.matrix %>% as.data.frame()
match.matrix_NEC_ID.seq <- data.frame(matrix(ncol = 3, nrow = 0), stringsAsFactors = FALSE)
colnames(match.matrix_NEC_ID.seq) <- c("ID.seq", "Group", "Group_ID.seq")

# Loop to create matched group sequences
for (i in rownames(match.matrix_NEC)) {
  m1 <- match.matrix_NEC[i, 1]
  m2 <- match.matrix_NEC[i, 2]
  
  Group_ID.seq <- c(
    FB_NEC_Sample.unmatch_Calprotectin[i,]$ID.seq,
    FB_NEC_Sample.unmatch_Calprotectin[m1,]$ID.seq,
    FB_NEC_Sample.unmatch_Calprotectin[m2,]$ID.seq
  )
  
  names(Group_ID.seq) <- c("NEC", rep("controls", 2))
  match.matrix_NEC_ID.seq <- rbind(match.matrix_NEC_ID.seq, Group_ID.seq)
}

# Convert to long format
match.matrix_NEC_Group_ID.seq <- match.matrix_NEC_ID.seq %>%
  pivot_longer(-ID.seq_NEC.match, names_to = "Controls", values_to = "ID.seq") %>%
  select(-Controls)

# Combine matched data for "T.meconium"
FB_NEC_match_Calprotectin_TP <- match.matrix_NEC_Group_ID.seq %>%
  rbind(FB_NEC_match_Calprotectin_raw_TP %>%
          filter(!is.na(Day.to.NEC)) %>%
          select(ID.seq) %>%
          mutate(ID.seq_NEC.match = ID.seq)) %>%
  left_join(
    FB_NEC_Sample.unmatch_Calprotectin %>%
      filter(!is.na(Day.to.NEC)) %>%
      select(ID.seq, TP_Calprotectin.match, Day.to.NEC) %>%
      rename(ID.seq_NEC.match = ID.seq)
  ) %>%
  left_join(FB_NEC_Sample.unmatch_Calprotectin %>% select(-TP_Calprotectin.match, -Day.to.NEC)) %>%
  select(ID.seq, ID.seq_NEC.match, Group.NEC.ID, TP_Calprotectin.match, everything())

List_FB_NEC_match_Calprotectin_TP[["T.meconium"]] <- FB_NEC_match_Calprotectin_TP
FB_NEC_match_Calprotectin_combined <- FB_NEC_match_Calprotectin_TP

# Matching for other groups (non-meconium)
for (i in levels.TP[-1]) {
  FB_NEC_Sample.unmatch_Calprotectin <- FB_NEC_Sample.unmatch_Calprotectin_all %>%
    filter(DOL > 3 | Group.NEC.ID == "Controls")

  data_match.optimal <- matchit(
    Group.NEC.ID ~ DOL + GA + BW + Gender + DeliveryMode + Apgar5 + Breastmilk_days + Ab_prenatal + Ab_days + Probiotics_days,
    data = FB_NEC_Sample.unmatch_Calprotectin, 
    method = "optimal", 
    ratio = 2
  )

  df.match.ID.NEC <- match.data(data_match.optimal) %>%
    distinct(ID.seq) %>%
    select(ID.seq) %>%
    mutate(Group_NEC_match_Calprotectin = Group.NEC.ID)

  FB_NEC_match_Calprotectin_raw_TP <- FB_NEC_Sample.unmatch_Calprotectin %>%
    filter(ID.seq %in% df.match.ID.NEC$ID.seq) %>%
    mutate(Group_NEC_match_Calprotectin = Group.NEC.ID)
  
  # Process the matching matrix for other groups
  match.matrix_NEC <- data_match.optimal$match.matrix %>% as.data.frame()
  match.matrix_NEC_ID.seq <- data.frame(matrix(ncol = 3, nrow = 0), stringsAsFactors = FALSE)
  colnames(match.matrix_NEC_ID.seq) <- c("ID.seq", "Group", "Group_ID.seq")

  for (i in rownames(match.matrix_NEC)) {
    m1 <- match.matrix_NEC[i, 1]
    m2 <- match.matrix_NEC[i, 2]
    
    Group_ID.seq <- c(
      FB_NEC_Sample.unmatch_Calprotectin[i,]$ID.seq,
      FB_NEC_Sample.unmatch_Calprotectin[m1,]$ID.seq,
      FB_NEC_Sample.unmatch_Calprotectin[m2,]$ID.seq
    )

    names(Group_ID.seq) <- c("NEC", rep("controls", 2))
    match.matrix_NEC_ID.seq <- rbind(match.matrix_NEC_ID.seq, Group_ID.seq)
  }

  match.matrix_NEC_Group_ID.seq <- match.matrix_NEC_ID.seq %>%
    pivot_longer(-ID.seq_NEC.match, names_to = "Controls", values_to = "ID.seq") %>%
    select(-Controls)

  # Combine matched data for each group
  FB_NEC_match_Calprotectin_TP <- match.matrix_NEC_Group_ID.seq %>%
    rbind(FB_NEC_match_Calprotectin_raw_TP %>%
            filter(!is.na(Day.to.NEC)) %>%
            select(ID.seq) %>%
            mutate(ID.seq_NEC.match = ID.seq)) %>%
    left_join(
      FB_NEC_Sample.unmatch_Calprotectin %>%
        filter(!is.na(Day.to.NEC)) %>%
        select(ID.seq, TP_Calprotectin.match, Day.to.NEC) %>%
        rename(ID.seq_NEC.match = ID.seq)
    ) %>%
    left_join(FB_NEC_Sample.unmatch_Calprotectin %>% select(-TP_Calprotectin.match, -Day.to.NEC)) %>%
    select(ID.seq, ID.seq_NEC.match, Group.NEC.ID, TP_Calprotectin.match, everything())

  List_FB_NEC_match_Calprotectin_TP[[i]] <- FB_NEC_match_Calprotectin_TP
  FB_NEC_match_Calprotectin_combined <- rbind(FB_NEC_match_Calprotectin_combined, FB_NEC_match_Calprotectin_TP)
}

# Final combined data with matching results
FB_NEC_match_Calprotectin_combined <- FB_NEC_match_Calprotectin_combined %>%
  mutate(TP_Calprotectin.match = factor(TP_Calprotectin.match, levels = levels.TP)) %>%
  select(ID.seq, ID.seq_NEC.match, Group.NEC.ID_sci, TP_Calprotectin.match, everything())




# Scripts below show the post-match differences between groups analyzed for Calprotectin, microbiome, and antibiotic use levels. This method is also applicable to microbiome and metabolomics analysis of samples, as well as between controls and stage Ib NEC.

## Matched data final preparation
TP_NEC_match_Calprotectin_combined <- FB_NEC_match_Calprotectin_combined %>%
  mutate(Group = "Postnatal age") %>%
  rename(TP = TP_Calprotectin.match, Days = DOL) %>%
  select(TP, Days, Group, Group.NEC.ID) %>%
  rbind(
    FB_NEC_match_Calprotectin_combined %>%
      mutate(Group = "Antibiotic use") %>%
      rename(TP = TP_Calprotectin.match, Days = Ab_days) %>%
      select(TP, Days, Group, Group.NEC.ID)
  ) %>%
  filter(!is.na(TP)) %>%
  mutate(
    Group.NEC.ID = as.character(Group.NEC.ID),
    Group.NEC.ID = replace(Group.NEC.ID, Group.NEC.ID == "NEC", "confirmed NEC"),
    Group.NEC.ID = replace(Group.NEC.ID, Group.NEC.ID == "NEC?", "stage Ib NEC"),
    Group.NEC.ID = factor(Group.NEC.ID, levels = c("Controls", "confirmed NEC", "stage Ib NEC")),
    Group = factor(Group, levels = c("Postnatal age", "Antibiotic use"))
  )

# Test differences between groups
comp_NEC_TP_DOL <- TP_NEC_match_Calprotectin_combined %>%
  filter(!is.na(Days)) %>%
  group_by(Group, TP) %>%
  wilcox_test(Days ~ Group.NEC.ID, ref.group = "Controls", p.adjust.method = "none") %>%
  add_xy_position(x = "TP", dodge = 0.8, scales = "free") %>%
  mutate(
    p.signif_label = case_when(
      p <= 0.0001 ~ "****",
      p <= 0.001 ~ "***",
      p <= 0.01 ~ "**",
      p <= 0.05 ~ "*",
      TRUE ~ "ns"
    )
  )

# Boxplot visualization for days vs TP across groups
(FB_NEC_match_Calprotectin_days <- TP_NEC_match_Calprotectin_combined %>%
  ggplot(aes(TP, Days)) +
  geom_boxplot(aes(fill = Group.NEC.ID, color = Group.NEC.ID), outlier.size = 0.2, alpha = 0.8) +
  scale_color_manual(values = Color_Group.NEC_sci) +
  scale_fill_manual(values = Color_Group.NEC_sci) +
  theme_classic() +
  theme(
    legend.position = "none", axis.title.x = element_blank(),
    axis.title = element_text(color = "black"), axis.title.y = element_text(color = "black"),
    axis.text = element_text(color = "black"), axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
  ) +
  stat_pvalue_manual(comp_NEC_TP_DOL, x = "TP", label = "p.signif_label", hide.ns = F, tip.length = 0, bracket.nudge.y = -2, y.position = 85) +
  facet_wrap(~Group, ncol = 2))

ggsave("FB_NEC_match_Calprotectin_days.pdf", width = 3.3, height = 2.4)

# Postnatal age and antibiotic use visualization for Calprotectin
(FB_NEC_match_Calprotectin_meta <- FB_NEC_match_Calprotectin_combined %>%
  mutate(Group = "Postnatal age") %>%
  rename(TP = TP_Calprotectin.match, Days = DOL) %>%
  select(TP, Days, Group, Group.NEC.ID) %>%
  rbind(
    FB_NEC_match_Calprotectin_combined %>%
      mutate(Group = "Antibiotic use") %>%
      rename(TP = TP_Calprotectin.match, Days = Ab_days) %>%
      select(TP, Days, Group, Group.NEC.ID)
  ) %>%
  filter(!is.na(TP)) %>%
  mutate(TP = factor(TP, levels = levels.TP), Group = factor(Group, levels = c("Postnatal age", "Antibiotic use"))) %>%
  ggplot(aes(TP, Days, color = Group.NEC.ID, fill = Group.NEC.ID)) +
  geom_boxplot(outlier.size = 0.2, alpha = 0.8) +
  ylab("Days") +
  facet_wrap(~Group) +
  scale_color_manual(values = c("#265A70", "red4", "goldenrod4")) +
  scale_fill_manual(values = c("#265A70", "red4", "goldenrod4")) +
  theme_classic() +
  theme(
    legend.position = "none", axis.title.x = element_blank(),
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
  ))

ggsave("FB_NEC_match_Calprotectin_DOL_Ab_days.pdf", width = 3.3, height = 2.4)

# Microbiome visualization for Calprotectin and antibiotic use
(FB_NEC_match_micro_meta <- FB_NEC_match_micro_combined %>%
  mutate(Group = "Postnatal age") %>%
  rename(TP = TP_micro.match, Days = DOL) %>%
  select(TP, Days, Group, Group.NEC.ID) %>%
  rbind(
    FB_NEC_match_micro_combined %>%
      mutate(Group = "Antibiotic use") %>%
      rename(TP = TP_micro.match, Days = Ab_days) %>%
      select(TP, Days, Group, Group.NEC.ID)
  ) %>%
  filter(!is.na(TP)) %>%
  mutate(TP = factor(TP, levels = levels.TP), Group = factor(Group, levels = c("Postnatal age", "Antibiotic use"))) %>%
  ggplot(aes(TP, Days, color = Group.NEC.ID, fill = Group.NEC.ID)) +
  geom_boxplot(outlier.size = 0.2, alpha = 0.8) +
  ylab("Days") +
  facet_wrap(~Group) +
  scale_color_manual(values = c("#265A70", "red4", "goldenrod4")) +
  scale_fill_manual(values = c("#265A70", "red4", "goldenrod4")) +
  theme_classic() +
  theme(
    legend.position = "none", axis.title.x = element_blank(),
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
  ))

ggsave("FB_NEC_match_micro_DOL_Ab_days.pdf", width = 3.3, height = 2.4)



# post-match differences between groups (age & accumulated antibiotic use)
TP_NEC_match_Calprotectin_combined <- FB_NEC_match_Calprotectin_combined %>% 
  mutate(Group = "Postnatal age") %>% 
  rename(TP = TP_Calprotectin.match,
         Days = DOL) %>% 
  select(TP, Days, Group, Group.NEC.ID) %>% 
  rbind(FB_NEC_match_Calprotectin_combined %>% 
              mutate(Group = "Antibiotic use") %>% 
  rename(TP = TP_Calprotectin.match,
         Days = Ab_days) %>% 
    select(TP, Days, Group, Group.NEC.ID)) %>% 
  filter(!is.na(TP)) %>% 
  mutate(Group.NEC.ID = factor(Group.NEC.ID, 
           levels = c("Controls", "confirmed NEC")),
         Group = factor(Group, levels = c("Postnatal age", "Antibiotic use")))

comp_NEC_TP_DOL <- TP_NEC_match_Calprotectin_combined %>% 
  filter(!is.na(Days)) %>% 
  group_by(Group, TP) %>%
  wilcox_test(Days ~ Group.NEC.ID, ref.group = "Controls", p.adjust.method = "none") %>% 
  add_xy_position(x = "TP", dodge = 0.8, scales = "free") %>% 
  # mutate(Group = factor(Group, levels = (List.NEC_dominant.Group))) %>% 
    mutate(p.signif_label = case_when(p <= 0.0001 ~ "****", p <= 0.001 ~ "***", p <= 0.01 ~ "**", p <= 0.05 ~ "*", TRUE ~ "ns"))

(FB_NEC_match_Calprotectin_days <- TP_NEC_match_Calprotectin_combined %>% 
  ggplot(aes(TP, Days)) +
    geom_boxplot(aes(fill = Group.NEC.ID, color = Group.NEC.ID), outlier.size = 0.2, alpha=0.8) +
    theme_classic() +
    theme(legend.position = "none", axis.title.x = element_blank(), 
          axis.title=element_text(color = "black"), axis.title.y=element_text(color = "black"), 
          axis.text = element_text(color = "black"), 
          axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
    stat_pvalue_manual(comp_NEC_TP_DOL, x = "TP",
                     label = "p.signif_label",
                     hide.ns = F, tip.length = 0, 
                     bracket.nudge.y = -2, y.position = 85) +
    facet_wrap(~Group, ncol = 2))
ggsave("FB_NEC_match_Calprotectin_days.pdf", width = 3.3, height = 2.4)
